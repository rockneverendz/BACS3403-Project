@model BACS3403_Project.Models.Recording

@{
	ViewData["Title"] = "Details";
	int questNo_1;
	string[] optionArr = { "Multiple choice", "Matching", "Plan, map, diagram labelling", "Form, note, table, flow-chart, summary completion", "Sentence completion", "Short-answer questions"};

	switch (Model.Part)
	{
		case 1:
			questNo_1 = 1;
			break;
		case 2:
			questNo_1 = 11;
			break;
		case 3:
			questNo_1 = 21;
			break;
		case 4:
			questNo_1 = 31;
			break;
		default:
			questNo_1 = 0;
			break;
	}

}

<div class="container">
	<ul class="nav nav-tabs">
		<li class="nav-item">
			<a class="nav-link active font-weight-bold px-5" id="tabHeader">
				Recording Part @Model.Part -
				ID: @Model.RecordingId
			</a>
		</li>
	</ul>
	<br />
	<form asp-action="">
		<div asp-validation-summary="ModelOnly" class="text-danger"></div>
		<div class="form-row mb-3">
			<div class="col-4">
				<label asp-for="Title" class="control-label"></label>
				<input asp-for="Title" class="form-control" value="@Model.Title" disabled />
				<span asp-validation-for="Title" class="text-danger"></span>
			</div>
			<div class="pl-5 col-4">
				<label asp-for="AudioURL" class="control-label"></label>
				<audio controls>
					<source src="@("/QuestionRecordings/Part" + Model.Part + "/" + Model.AudioURL)" type="audio/mpeg">
					Your browser does not support the audio element.
				</audio>
			</div>
		</div>
		<div class="form-row mb-3 col-4">
			<div class="custom-control custom-checkbox">
				<input asp-for="Available" type="checkbox" class="custom-control-input" id="customCheck1" disabled>
				<label asp-for="Available" class="custom-control-label" for="customCheck1">
					@(Model.Available == true ? "Enabled" : "Disabled")
				</label>
			</div>
			<span asp-validation-for="Available" class="text-danger"></span>
			@*<div class="form-group ml-5 pl-5" >
					<input type="submit" value="Edit" class="btn btn-primary" />
				</div>*@
		</div>
	</form>

	@*
		IF (Recording.QuestionGrp != NULL) THEN

		   >> DISPLAY THE QUESTIONS GRP IN THE DB

		   IF (QUESTIONS GRP .COUNT() < 5) THEN

			   >> DISPLAY THE CREATE NEW QUESTGRP BUTTON
	*@

	@{
		var QuestionModel1 = Model.QuestionGroups;

		if (QuestionModel1 != null)
		{

			int flag = 0;

			foreach (var item in QuestionModel1.ToList())
			{

				<div class="card justify-content-center">
					<div class="card-body">
						@* Form Post to QuestionGroup Edit Controller *@
						<form action="/" method="post">
							<div class="form-inline">
								<div class="form-group col-4">

									@* Rmv question no and change to no of marking scheme*@

									<label for="selectQuestNo" class="col-form-label  mx-3">Questions:</label>
									<select class="custom-select" id="selectQuestNo">
										@for (int i = 0; i < 10; i++)
										{
											if ((i + questNo_1) == questNo_1)
											{
												<option value="@(i + questNo_1)" selected>@(i + questNo_1)</option>

											}
											else
											{
												<option value="@(i + questNo_1)">@(i + questNo_1)</option>

											}
										}
									</select>

									<label for="selectQuestNo2" class="col-form-label mx-3">To</label>
									<select class="custom-select" id="selectQuestNo2">
										@for (int i = 0; i < 10; i++)
										{
											if ((i + questNo_1) == (questNo_1 + item.MarkSchemes.Count - 1))
											{
												<option value="@(i + questNo_1)" selected>@(i + questNo_1)</option>
												flag = questNo_1 + item.MarkSchemes.Count;

											}
											else
											{
												<option value="@(i + questNo_1)">@(i + questNo_1)</option>
											}

										}
									</select>
								</div>

								<div class="form-group col-8">
									<label for="selectQuestNo" class="col-form-label  mx-3">Question Type</label>
									<select class="custom-select col-8" id="selectQuestType">

										@*Create string array to store diplay option *@

										@for (int i = 0; i < 6; i++)
										{
											@if (item.TaskType == (i + 1))
											{
												<option value="@(i+1)" selected>@optionArr[i]</option>
											}
											else
											{
												<option value="@(i+1)">@optionArr[i]</option>
											}
										}

									</select>
								</div>
							</div>

							<div class="form-group mx-5 my-3 col-10">
								<label for="questTextArea" class="col-form-label-lg"><b>Question:</b></label>
								<textarea name="content" id="editor">
								&lt;p&gt;This is some sample content.&lt;/p&gt;
							</textarea>
							</div>

							<div class="mx-5 my-3 col-10">
								<label for="questTextArea" class="col-form-label-lg"><b>Answers:</b></label>

								@for (int i = 1; i <= 5; i++)
								{
									<div class="form-group row">
										<label class="col-form-label col-1 text-right">@i. </label>
										<div class="col-6">
											<input class="form-control " value="" />
										</div>
									</div>
								}

							</div>

						</form>
					</div>
					<div class="card-footer text-muted text-right">
						<a href="#" class="btn btn-primary">Save</a>
						<a href="#" class="btn btn-secondary">Cancel</a>
					</div>
				</div>
			}
		}
	}

	<hr />

	<div class="nav justify-content-center">
		<a asp-controller="QuestionGroups" asp-action="Create" asp-route-recordingId="@Model.RecordingId"
		   class="btn btn-lg btn-secondary">
			<i class="fa fa-plus-circle" aria-hidden="true"></i> &nbsp; New Question Group
		</a>
	</div>
</div>

<hr />



<table class="table">
	<tbody>
		@{
			var QuestionModel = Model.QuestionGroups;
			if (QuestionModel != null)
			{
				foreach (var item in QuestionModel.ToList())
				{
					<tr>
						<td>
							@Html.DisplayFor(modelItem => item.QuestionGroupId)
						</td>
						<td>
							@Html.DisplayFor(modelItem => item.TaskType)
						</td>
						<td>
							@Html.DisplayFor(modelItem => item.QuestionGroupURL)
						</td>
						<td>
							@Html.DisplayFor(modelItem => item.Recording.RecordingId)
						</td>
						<td>
							@Html.DisplayFor(modelItem => item.MarkSchemes.Count)
						</td>
						<td>
							<a asp-controller="QuestionGroups" asp-action="Edit" asp-route-id="@item.QuestionGroupId">
								Edit
							</a> |
							<a asp-controller="QuestionGroups" asp-action="Details" asp-route-id="@item.QuestionGroupId">
								Details
							</a> |
							<a asp-controller="QuestionGroups" asp-action="Delete" asp-route-id="@item.QuestionGroupId">
								Delete
							</a>
						</td>
					</tr>
				}
			}

		}
	</tbody>
</table>


<div>
	<a asp-action="Edit" asp-route-id="@Model.RecordingId">Edit</a> |
	<a asp-action="Index" asp-route-part=1>Back to List</a>
</div>


@section Scripts {
	<script src="~/lib/ckeditor5/build/ckeditor.js"></script>
	<script>
		ClassicEditor
			.create(document.querySelector('#editor'), {

				toolbar: {
					items: [
						'undo',
						'redo',
						'|',
						'heading',
						'|',
						'fontFamily',
						'fontSize',
						'|',
						'bold',
						'italic',
						'underline',
						'code',
						'horizontalLine',
						'bulletedList',
						'numberedList',
						'|',
						'indent',
						'outdent',
						'|',
						'imageUpload',
						'blockQuote',
						'insertTable'
					]
				},
				language: 'en',
				image: {
					toolbar: [
						'imageTextAlternative',
						'imageStyle:full',
						'imageStyle:side'
					]
				},
				table: {
					contentToolbar: [
						'tableColumn',
						'tableRow',
						'mergeTableCells',
						'tableCellProperties',
						'tableProperties'
					]
				},
				licenseKey: '',
			})
			.then(editor => {
				window.editor = editor;
			})
			.catch(error => {
				console.error('Oops, something gone wrong!');
				console.error('Please, report the following error in the https://github.com/ckeditor/ckeditor5 with the build id and the error stack trace:');
				console.warn('Build id: 571780nchaof-wu4owlwikxxz');
				console.error(error);
			});
	</script>
}