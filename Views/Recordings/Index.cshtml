@model IEnumerable<BACS3403_Project.Models.Recording>


@{
	ViewData["Title"] = "Question Bank";
	Layout = "~/Views/Shared/_Layout.cshtml";

	string TitleHeader;
	string Desc;

	switch (Context.Request.Query["part"])
	{
		case "1":
			TitleHeader = "Part 1 Recordings";
			Desc = "A conversation between two people set in everyday social context";
			break;
		case "2":
			TitleHeader = "Part 2 Recordings";
			Desc = "A monologue set in an everyday social context, e.g. a speech about local facilities.";
			break;
		case "3":
			TitleHeader = "Part 3 Recordings";
			Desc = "A conversation between up to four people set in an educational or training context, e.g. a university tutor and a student discussing an assignment.";
			break;
		case "4":
			TitleHeader = "Part 4 Recordings";
			Desc = "A monologue on an academic subject, e.g. a university lecture.";
			break;
		default:
			TitleHeader = "Part 1 Recordings";
			Desc = "A conversation between two people set in everyday social context";
			break;
	}
}

<div class="tab card">
	<a asp-action="Index" asp-route-part=1 id="defaultOpen" class="tablinks @(Context.Request.Query["part"] == "1" ? "active":"")">
		<h5 class="mb-0">Part 1</h5>
	</a>
	<a asp-action="Index" asp-route-part=2 class="tablinks @(Context.Request.Query["part"] == "2" ? "active":"")">
		<h5 class="mb-0">Part 2</h5>
	</a>
	<a asp-action="Index" asp-route-part=3 class="tablinks @(Context.Request.Query["part"] == "3" ? "active":"")">
		<h5 class="mb-0">Part 3</h5>
	</a>
	<a asp-action="Index" asp-route-part=4 class="tablinks @(Context.Request.Query["part"] == "4" ? "active":"")">
		<h5 class="mb-0">Part 4</h5>
	</a>
</div>

<div id="Part1" class="tabcontent card overflow-auto">

	<div id="partHeader">
		<h3>@TitleHeader</h3>
		<a asp-action="Create" asp-route-part="@Context.Request.Query["part"]" type="button" class="btn btn-primary">
			<i class="fa fa-plus-circle" aria-hidden="true"></i> New Recording
		</a>
	</div>
	<p>@Desc</p>
	<hr>

	@*Ouput the recordings for Part 1 here*@

	@foreach (var item in Model)
	{
		<div class="card mb-2">
			<div class="card-body recording">
				<div class="recText">
					<a href="#">
						@* If Availability is True == Success(Green) Else == Grey(Secondary)  *@
						<i class="fa fa-check-circle @(item.Available == true ? "text-success":"text-secondary")" aria-hidden="true"></i>
					</a>
					<a asp-action="Details" asp-route-id="@item.RecordingId">
						@* Recording Title *@
						&nbsp;&nbsp; @Html.DisplayFor(modelItem => item.Title)
					</a>

				</div>
				<div class="dropdown">
					<button class="btn btn-light dropdown" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
						<i class="fa fa-ellipsis-v" aria-hidden="true"></i>
					</button>
					<div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
						<a asp-action="Edit" asp-route-id="@item.RecordingId" class="btn dropdown-item">
							Edit <i class="fa fa-pencil text-primary float-right mt-1" aria-hidden="true"></i>
						</a>
						<a asp-action="Delete" asp-route-id="@item.RecordingId" class="btn dropdown-item">
							Delete<i class="fa fa-trash text-danger float-right mt-1" aria-hidden="true"></i>
						</a>
					</div>
				</div>
			</div>
		</div>

	}
</div>

